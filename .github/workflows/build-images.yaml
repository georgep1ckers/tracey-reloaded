name: build-images

on:
  push:
    branches:
      - gh-actions
  pull_request:
  workflow_dispatch:

# # Cancel in progress workflows on pull_requests.
# # https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
# concurrency:
#   group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
#   cancel-in-progress: true
env:
  REGISTRY: ghcr.io
  OP_IMAGE_NAME: tracey-reloaded-order-processor
  SC_IMAGE_NAME: tracey-reloaded-stock-controller
  WI_IMAGE_NAME: tracey-reloaded-warehouse-interface


jobs:
  files-changed:
    name: detect what files changed
    runs-on: ubuntu-latest
    timeout-minutes: 3
    # Map a step output to a job output
    outputs:
      order-processor: ${{ steps.changes.outputs.order-processor }}
      stock-controller: ${{ steps.changes.outputs.stock-controller }}
      warehouse-interface: ${{ steps.changes.output.warehouse-interface }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for backend file changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          filters: |
            order-processor:
             - 'tracey-reloaded/order-processor/**'
            stock-controller:
             - 'tracey-reloaded/stock-controller/**'
            warehouse-interface:
             - 'tracey-reloaded/warehouse-interface/**'

  order-processor:
   if: needs.files-changed.outputs.order-processor == 'true'
   needs: files-changed
   name: build & push order-processor image
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.OP_IMAGE_NAME }}

    - name: Build and push Docker Image
      uses: docker/build-push-action@v5.0.0
      with:
        context: ./tracey-reloaded/order-processor/
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels}}


  stock-controller:
   if: needs.files-changed.outputs.stock-controller == 'true'
   needs: files-changed
   name: build & push stock-controller image
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.SC_IMAGE_NAME }}

    - name: Build and push Docker Image
      uses: docker/build-push-action@v5.0.0
      with:
        context: ./tracey-reloaded/stock-controller/
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels}}

  warehouse-interface:
   if: needs.files-changed.outputs.warehouse-interface == 'true'
   needs: files-changed
   name: build & push warehouse-interface image
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.WI_IMAGE_NAME }}

    - name: Build and push Docker Image
      uses: docker/build-push-action@v5.0.0
      with:
        context: ./tracey-reloaded/warehouse-interface/
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels}}